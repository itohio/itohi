<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ITOHI</title><link>https://itohi.com/</link><description>Recent content on ITOHI</description><generator>Hugo -- gohugo.io</generator><copyright>2022 @ ITOHI - All rights reserved</copyright><lastBuildDate>Mon, 05 Dec 2022 20:05:19 +0200</lastBuildDate><atom:link href="https://itohi.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Adventures with Hugo</title><link>https://itohi.com/blog/adventures-with-hugo/</link><pubDate>Mon, 05 Dec 2022 20:05:19 +0200</pubDate><guid>https://itohi.com/blog/adventures-with-hugo/</guid><description>
I've been involved in Full Stack for a while now in one form or another(either maintaining, designing or working on Full Stack projects). Even during school time, I was building websites for myself and my friends. I've built sites commercially even. Although I've been using either pure HTML+JS or even PHP/Perl at some point. I rarely liked this activity, especially since the visual designs of the web pages were lacking and I just couldn't make myself study some visual design :(</description></item><item><title>ESP32 as Bluetooth audio receiver (A2DP sink)</title><link>https://itohi.com/acoustics/esp32-as-bluetooth-audio/</link><pubDate>Thu, 01 Dec 2022 20:01:28 +0200</pubDate><guid>https://itohi.com/acoustics/esp32-as-bluetooth-audio/</guid><description>
I was building a Christmas set of spherical speakers just to familiarize myself with ADAU1401 Sigma DSP. And I wanted to add Bluetooth capability to the speakers so that they could receive sound data from an old Samsung Galaxy Node 10.1 in the kitchen.
Granted, I have ordered some Bluetooth audio receivers, however, while they are being shipped, I thought to myself: Hey, I already have powerful CPUs(ESP32) with Bluetooth. These chips have I2S and I have I2S DACs waiting for another project!</description></item><item><title>How Its Been in 2020-2022</title><link>https://itohi.com/blog/how-its-been-in-2020-2022/</link><pubDate>Sun, 13 Nov 2022 12:46:27 +0200</pubDate><guid>https://itohi.com/blog/how-its-been-in-2020-2022/</guid><description>
Years 2020, 2021 and 2022 have been tough for almost everyone. The pandemic, the war, global economic collapse, bancruptcies in Crypto sphere... You name it. Although, for me it was a rather productive period(despite a divorce spanning almost 3 years), since I have accustomed to working from home and working on various project remotely. The range of projects varied from working on a system that tailors advertisements to people behavior to optimizing Internet traffic by cleverly and autonomously arranging relay nodes all around the globe.</description></item><item><title>Multilanguage Test</title><link>https://itohi.com/blog/multilanguage-test/</link><pubDate>Fri, 13 May 2022 18:26:47 +0200</pubDate><guid>https://itohi.com/blog/multilanguage-test/</guid><description>
This is a simple test for multilanguage support. Sometimes I feel like writing in native tongue, sometimes in multiple languages... So, let's see how that goes.
Here's a comic strip about why I have so many unfinished projects:</description></item><item><title>Esp8266 Driven Oven Controller Over Web Ui</title><link>https://itohi.com/esp-reflow/esp8266-driven-oven-controller-over-web-ui/</link><pubDate>Sat, 13 Jul 2019 17:44:47 +0200</pubDate><guid>https://itohi.com/esp-reflow/esp8266-driven-oven-controller-over-web-ui/</guid><description>
!!! WARNING: This project deals with mains power and high current !!! Please be careful if you wish to replicate any of its functionality and never work on a PCB or any open wires that are connected to the mains ! Author has no responsibility for your safety and wellbeing, so please take care of yourself.
How it works The purpose of this project is to control a heater of any sort to facilitate SMT reflow soldering utilizing a predefined temperature profile.</description></item><item><title>Arduino ESP8266 Smart Motion Sensor using PIR and MQTT</title><link>https://itohi.com/blog/esp-1-smart-motion-sensor-using-pir-and-mqtt/</link><pubDate>Fri, 19 Apr 2019 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/esp-1-smart-motion-sensor-using-pir-and-mqtt/</guid><description>
My son has a cat. And I've become very curious about the cat's feeding and toilet habits. Mainly I'm interested in how long does it take him to go to the toilet after eating as I've noticed a pattern: At first he goes to the kitchen, eats and then runs around the house wrecking havoc for some time and then goes to the toilet. So I'm curious whether this is his usual routine and moreover how many times during the day and night does he need to use his toilet.</description></item><item><title>Building ESP8266 Weather station with BME280 (part 2)</title><link>https://itohi.com/blog/building-esp8266-weather-station-part-ii/</link><pubDate>Mon, 15 Apr 2019 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/building-esp8266-weather-station-part-ii/</guid><description>
In a previous post I've described how to build a Weather Station based on ESP8266 chip and various breakout boards you can buy e.g. on Aliexpress. In this post, however I'll share with you how I built a standalone PCB boards containing all the required components. To recap - this is a ESP8266 based Weather Station, that measures surrounding air temperature, humidity, pressure along with light and battery voltage. Connects to an MQTT broker and reports it's data there.</description></item><item><title>Arduino Metal Detector using frequency counter and OLED display</title><link>https://itohi.com/blog/metal-detector-using-frequency-counter-and-oled-display/</link><pubDate>Sun, 08 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/metal-detector-using-frequency-counter-and-oled-display/</guid><description>
There are a lot of forests in Lithuania which I like exploring on my bike. In the past a lot of Lithuanian resistance troops resided in those forests, so there is a big probability to stumble upon a stash of some kind. However that stash might as well be a grenade or a bomb of some kind, but nevertheless I always wanted to combine my motorcycle riding through the woods with treasure hunting and some time ago I decided to build a simple metal detector.</description></item><item><title>Arduino Developing with Atom IDE and PlatformIO for AVR and ESP chips</title><link>https://itohi.com/blog/developing-with-atom-ide-and-platformio/</link><pubDate>Thu, 05 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/developing-with-atom-ide-and-platformio/</guid><description>
There are many different ways to develop and deploy embedded solutions, one of the most popular ones would be Arduino IDE. But the editor is very simplistic, without handy features such as intellisense, code refactoring and many others. I've used AVR Studio, IAR, even VIM to develop code for AVR/STM microcontrollers.. But they are either designed specifically for that platform or are commercial products. And I love Open Source :)</description></item><item><title>Python development with Visual Studio Code</title><link>https://itohi.com/blog/python-development-with-visual-studio-code/</link><pubDate>Thu, 05 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/python-development-with-visual-studio-code/</guid><description>
VS Code is an light but powerful editor developed by Microsoft. I have been using this editor for Python and embedded development(using PlatformIO) for a few months now.
Using PlatformIO with VSCode is rather simple - just install it through built in package manager and you're good to go. However python development needs a bit more work to setup properly. Especially if you want to develop Django apps with VSCode. That is what I'll be covering here in this post.</description></item><item><title>Building ESP8266 Weather station with BME280 (part 1)</title><link>https://itohi.com/blog/building-esp8266-weather-station-part-i/</link><pubDate>Tue, 03 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/building-esp8266-weather-station-part-i/</guid><description>
Ever since I started playing around with ESP modules I wanted to measure weather conditions in multiple location at home, friends, etc. The best way to achieve that would be to build a station that gathers various environment parameters and publishes them somewhere. That is what I've done. The very first prototype was done using ESP-1 module, DHT-11 humidity sensor and BMP280 breakout board. The station publishes gathered data to a MQTT broker from where it can be further gathered and analysed.</description></item><item><title>Building ESP-1 balancing robot</title><link>https://itohi.com/blog/building-esp-1-balancing-robot/</link><pubDate>Mon, 02 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/building-esp-1-balancing-robot/</guid><description>
I was always fascinated with balancing robots and wanted to build one myself. Some time ago I started collecting IMU, arduino boards, wheels, motors for other wheeled robots and one day decided to build a balancing robot instead. I've used wheels from old four wheel drive robot that used mouse sensors for odometry and was driven by an Arduino Pro mini. That robot never went alive anyway :)
Originally the robot was built using Arduino pro mini and all it could do was balance.</description></item><item><title>ESP8266 Wheelie</title><link>https://itohi.com/blog/esp8266-wheelie/</link><pubDate>Mon, 02 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/esp8266-wheelie/</guid><description>
As I've mentioned in the last blog post, I was trying to build a four wheel drive robot using arduino that utilizes two A3080 mouse sensors for odometry. Sadly that project never got finished and I disassembled the robot and built a balancing robot instead. However later I decided to not abandon the four wheel drive robot and ordered several ADNS3080 sensors with proper optics, obtained an electric wheelie toy, which lead to the birth of this WiFi controlled toy car.</description></item></channel></rss>