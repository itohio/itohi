<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>howto on ITOHI</title><link>https://itohi.com/categories/howto/</link><description>Recent content in howto on ITOHI</description><generator>Hugo -- gohugo.io</generator><copyright>2022 @ ITOHI - All rights reserved</copyright><lastBuildDate>Thu, 05 Jul 2018 01:01:28 +0200</lastBuildDate><atom:link href="https://itohi.com/categories/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>Arduino Developing with Atom IDE and PlatformIO for AVR and ESP chips</title><link>https://itohi.com/blog/developing-with-atom-ide-and-platformio/</link><pubDate>Thu, 05 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/developing-with-atom-ide-and-platformio/</guid><description>
There are many different ways to develop and deploy embedded solutions, one of the most popular ones would be Arduino IDE. But the editor is very simplistic, without handy features such as intellisense, code refactoring and many others. I've used AVR Studio, IAR, even VIM to develop code for AVR/STM microcontrollers.. But they are either designed specifically for that platform or are commercial products. And I love Open Source :)</description></item><item><title>Python development with Visual Studio Code</title><link>https://itohi.com/blog/python-development-with-visual-studio-code/</link><pubDate>Thu, 05 Jul 2018 01:01:28 +0200</pubDate><guid>https://itohi.com/blog/python-development-with-visual-studio-code/</guid><description>
VS Code is an light but powerful editor developed by Microsoft. I have been using this editor for Python and embedded development(using PlatformIO) for a few months now.
Using PlatformIO with VSCode is rather simple - just install it through built in package manager and you're good to go. However python development needs a bit more work to setup properly. Especially if you want to develop Django apps with VSCode. That is what I'll be covering here in this post.</description></item></channel></rss>